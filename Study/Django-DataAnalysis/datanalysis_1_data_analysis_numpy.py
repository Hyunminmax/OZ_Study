# -*- coding: utf-8 -*-
"""DatAnalysis_1.data_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tS8rrW8PgdTQwKvpW3ZSLyD8seYM7spz

## 1. Numpy
- 파이썬에서 수학적인 계산(행렬, 백터, 차원)을 편하게 할 수 있도록 돕는 라이브러리
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install numpy

import numpy as np

# 1차원 배열
arr1 = np.array([1,2,3])

arr1
# type(arr1)
arr1.shape
# arr1.ndim

# 2차원 배열
arr2 = np.array([[1,2,3],[1,2,3]])
arr2
# type(arr2)
arr2.shape
arr2.ndim

# ndarray 데이터 타입
arr3 = ['2',1]
arr3 = np.array(arr3)
arr3.dtype

# ndarray 생성
arr = np.arange(10)
arr[arr > 5]

np.zeros((3,2))

# reshape => 차원을 병경
arr = np.arange(10)

arr.reshape(2,5)
arr.reshape(5,2)

# indexing & slicing
arr[1]
arr[5:]

# numpy 몇 가지
# Q1. 2차원 배열에서 행렬의 각 행의 평균을 계산하는 코드를 작성하세요.
# np.mean()
arr = np.array([[1,2,3], [4,5,6], [7,8,9]])
arr.shape
# axis = 0(열), axis = 1(행), axis = 2(채널),
np.mean(arr, axis = 1)

# Q2. 1차원 배열에서 짝수 인덱스의 값을 출력하는 코드를 작성하세요.
arr = np.array([1,2,3,4,5,6])
even_indexes = np.arange(0, arr.size, 2)
print(arr[even_indexes])

# Q3. 2차원 배열의 주 대각선 상에 있는 원소들을 출력하는 코드를 작성하세요.
arr = np.array([[1,2,3], [4,5,6], [7,8,9]])
arr.shape
# diag
np.diag(arr)

# Q4. 2차원 배열에서 각 열의 표준 편차를 게산하는 코드를 작성하세요.
# 표준 편차 >> np.std()
arr = np.array([[1,2,3], [4,5,6], [7,8,9]])
np.std(arr)
print(arr)
np.std(arr,axis=0)

# Q6. 2차원 배열에서 각 행의 최대값과 그 인덱스를 출력하는 코드를 작성하세요.
# amax
arr = np.array([[1,2,3], [4,5,6], [7,8,9]])
print(arr)
np.amax(arr, axis=1)

# Q7. 1차원 배열에서 중앙값(median)을 계산하는 코드를 작성하세요.
arr = np.array([[1,2,3,4,5]])
np.median(arr)

#Q9. 1차원 배열엥서 원소의 값이 5 이상인 것들만 출력하는 코드를 작성하세요.
# - boolean indexing
arr = np.array([[1,2,3,4,5,6,7,8]])
arr[arr >= 5]

#Q11. 1차원 배열에서 원소의 값이 3 또는 5인 것들의 인덱스를 출력하는 코드를 작성하세요.
arr = np.array([1,3,5,2,4,6,3,5,7])
np.where((arr == 3) | (arr == 5))